rytnjfg ntfhnednfrg
  const http = require('http')
const fs = require('fs')
const path = require('path')

http.createServer((req,res) =>{
  if (req.url === '/') req.url = '/index.html'
  let eName = path.extname(req.url)
  let cT = 'text.html'
      switch(eName) {

    case '.html' :
      cT = 'text.html'
      break;
    case '.txt' :
      cT = 'text.txt'
      break;
    case '.css' :
      cT = 'text/css'
      break;
    case '.png' :
      cT = 'image/img'
      break;
    case '.jpg' :
     cT = 'image/jpeg'
     break;
     default :
     cT = 'text/html'
  }
  if ( fs.existsSync(process.cwd()+req.url) && path.extname(process.cwd()+req.url) == '' ) {
    fs.readdir(process.cwd() + req.url, 'utf-8', (err, files) => {
        if (err) console.log('ERROR = ', err)
        files.forEach(Element => res.write(Element + '\n'))
        res.end()
    })
}else
  fs.readFile(process.cwd + req.url, 'utf8', (err,data) =>{
if(err){
    fs.readFile(process.cwd() + '/public/404.html', (err,content)=>{
       if (err) throw err
          res.writeHead(404,{'Conten-Type' : cT})
          res.end(content)
  })
}
  else {
    res.writeHead(200,{'Content-Type' : cT})
    res.end(data)
  }
  })
}).listen(3000)
__________________


if ( fs.existsSync(process.cwd()+req.url) && path.extname(process.cwd()+req.url) == '' ) {
        fs.readdir(process.cwd() + req.url, 'utf-8', (err, files) => {
            if (err) console.log('ERROR = ', err)
            files.forEach(Element => res.write(Element + '\n'))
            res.end()
        })
    } 
    __________________
     fs.readFile(process.cwd() + req.url, 'utf-8', (err, data) => {

        if (err) {
            fs.readFile(process.cwd() + '/404.html', (error, content) => {
                if (error) throw error
                    res.writeHead(404, { 'Content-Type': cType });
                    res.end(content, 'utf-8');
            });
        }    
        
        else {
            res.writeHead(200, {'Content-Type': cType})
            res.end(data, 'utf-8')
        }
        
    })